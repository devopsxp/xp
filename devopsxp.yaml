host: # 目标主机
  - 127.0.0.1
  # - 192.168.0.1-20
remote_user: lxp 
terminial: false
roles: # 执行具体stage
  - vim-go
  - build
  - test
vars: # 环境变量 默认会将所有Key转换未小写字母，请写模板的时候注意
  Status: true
  title: "模板测试"
  serviceName: "xp"
  pipelineName: template test
  pipelineId: no1
  pipelineUrl: http://www.baidu.com
  branch: master
  stage: build
  tags: test
  info: test only
  alerts:
    - status: firing
      generatorURL: http://www.google.com
      startsAt: 2020-08-01
      endsAt: 2020-09-01
      annotations:
        current_value: 85
      labels:
        severity: warning
        node: 127.0.0.1
        threshold_value: 80console
    - status: ok
      generatorURL: http://www.google2.com
      startsAt: 2020-18-01
      endsAt: 2020-29-01
      annotations:
        current_value: 99
      labels:
        severity: ok
        node: 127.0.0.1
        threshold_value: 88
hooks: # 消息发送 全局一个 可以一次发送所有结果到多个渠道
  - type: none # 类型，支持：console|email|wechat|phone|sms
#   - type: email
#     alias: xp战队 # 邮箱昵称
#     email_user: "xp@xp.com"
#     email_pwd: "******"
#     email_smtp: "smtp.exmail.qq.com"
#     email_smtp_port: "465"
#     email_to:
#       - xp@xp.com
#     template: # 告警模板
#       title: "告警title"
#       text: "{{.Status}} {{.title}}
#       {{range $key,$value := .logs}}
#         {{range $k,$v := $value}}
#         ------ {{$k}} {{$v}}<br/>
#         {{end}}
#       {{end}}"
#       path: template.service.j2
#       vars: # 内置固定参数
#         Status: true
#         title: "模板测试"
#         serviceName: "xp"
#   - type: wechat
#     address:
#       - https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=******
#     template: # 告警模板
#       text: '
# # 告警模板

# {{if .Status}} <font color=\"info\">[成功] </font>{{ .title}} {{- else}}<font color=\"warning\">[失败] </font> {{ .title}}  {{- end}} 

# > 服务名称：<font color="comment">{{.serviceName}}</font> 
# > 流水线名称：<font color="comment">{{.pipelineName}}</font> 
# > 流水线ID：<font color="comment">{{.pipelineId}}</font> 
# > 流水线地址：<font color="comment">{{.pipelineUrl}}</font> 
# > 构建分支：<font color="comment">{{.branch}}</font> 
# > 阶段：<font color="comment">{{.stage}}</font> 
# > 构建人：<font color="comment">{{.user}}</font> 
# > COMMIT: <font color="comment">{{.info}}</font> 
# > COMMITID：<font color="comment">{{.tags}}</font>

# # {{.title}}

# {{range $key,$value := .logs}}
# {{range $k,$v := $value}}
# > {{$k}} {{$v}}
# {{end}}
# {{end}}'
#       path: template.service.j2
#       vars: # 内置固定参数
#         title: "模板测试"
#         serviceName: "xp"
  # - type: phone
  # - type: sms
stage: # 流程步骤
  - vim-go
  - build
  - test
config: # 详细配置信息
  - stage: vim-go
    name: install vim-go plugin
    shell: "{{ .item }}"
    with_items:
    - git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim 
    - uname -a
  - stage: build
    name: template 模板测试
    template: 
      src: template.service.j2 
      dest: /tmp/docker.service
  - stage: test
    name: 上传文件
    copy: 
      src: "{{ .item }}"
      dest: /tmp/{{ .item }}
    with_items:
      - LICENSE
    tags: # 指定主机执行
      - 192.168.0.10
  - stage: what
    name: 非stage测试
    shell: whoami
  - stage: build
    name: 获取go version
    shell: lsb_release -a
  - stage: test
    name: 获取主机名
    shell: "{{.item}}"
    with_items:
    - hostname
    - ip a
    - pwd
    - uname -a
    tags:
      - 127.0.0.1
    retry: 10 # 重试次数
    retryWait: 1 # 重试间隔 单位秒钟
  - stage: test
    name: 查看docker信息
    shell: systemctl status sshd
  - stage: test
    name: docker image执行测试
    image: ubuntu
    script:
      - date
      - pwd
      - hostname
    tags:
      - 127.0.0.1
    retry: 10
    retryWait: 1